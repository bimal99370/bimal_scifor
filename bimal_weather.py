# -*- coding: utf-8 -*-
"""Bimal_weather.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1g2b2Fphb0ASwE8e99Fh2S6FJz_oS28h3
"""

import pandas as pd

import numpy as np

import matplotlib.pyplot as plt

import seaborn as sns

df_weather= pd.read_csv("/content/weatherHistory1.csv")

df_weather.shape

df_weather.info()

df_weather.head(10)

df_weather.nunique()

df_weather["Summary"].value_counts()

df_weather.isnull().sum()

df_weather['Precip Type'].value_counts()

df_weather['Precip Type'].value_counts().index[0]

df_weather['Precip Type'].fillna(df_weather['Precip Type'].value_counts().index[0],inplace=True)

df_weather.isna().sum()

df_weather.duplicated().sum()

df_weather.drop_duplicates(inplace=True)

# delete  rows where is any null values

df_weather = df_weather.dropnull()

df_weather.isna().sum()

df_weather.head(5)

#checking Datatypes
df_weather.dtypes

# import datetime as dt
# from datetime import timedelta

df_weather["Formatted Date"]=pd.to_datetime(df_weather["Formatted Date"])

def bar_plot(feature1,feature2):
    plt.figure(figsize = (15,4))
    sns.barplot(data = df_weather , x = feature1 , y = feature2).set_title(f"{feature1} Vs {feature2}")
    plt.show()

bar_plot('Temperature (C)','Humidity')
# bar_plot('','')

# Histogram of temperature
plt.hist(df_weather["Temperature (C)"])
plt.xlabel("Temperature (C)")
plt.ylabel("Frequency")
plt.title("Histogram of Temperature")
plt.show()

# Scatter plot of humidity vs. wind speed
plt.scatter(df_weather["Humidity"], df_weather["Wind Speed (km/h)"])
plt.xlabel("Humidity")
plt.ylabel("Wind Speed (km/h)")
plt.title("Scatter Plot of Humidity vs. Wind Speed")
plt.show()

plt.figure(figsize=(12,7))
plt.xticks(rotation=90)
sns.barplot(data=df_weather, x="Summary", y="Temperature (C)",hue="Precip Type")

plt.figure(figsize=(7,5))
plt.xticks(rotation=90)
sns.lineplot(data=df_weather, x="Summary", y="Pressure (millibars)", hue="Precip Type", style="Precip Type")

# Histogram of humidity
sns.histplot(x=df_weather["Humidity"])

sns.pairplot(df_weather,hue="Humidity")

# Scatter plot of wind speed vs. temperature
sns.scatterplot(y=df_weather["Wind Speed (km/h)"], x=df_weather["Temperature (C)"])

